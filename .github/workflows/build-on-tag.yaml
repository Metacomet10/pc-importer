name: Module CI/CD

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get the version from Tag
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      #Substitute the Download URL in the module.json
      - name: Substitute Manifest Link For Versioned One
        id: sub_manifest_link_version
        uses: microsoft/variable-substitution@v1
        with:
          files: 'module.json'
        env:
          version: ${{ steps.get_version.outputs.VERSION }}
          manifest: https://github.com/${{github.repository}}/releases/download/latest/module.json
          download: https://github.com/${{github.repository}}/releases/download/${{ steps.get_version.outputs.VERSION }}/module.zip

      # create a zip file with all files required by the module to add to the release
      - name: Zip Files
        run: zip -r ./module.zip module.json css/ lang/ modules/ templates/

      # Generate changelog for release body
      - name: Changelog
        id: Changelog
        uses: scottbrenner/generate-changelog-action@master
        env:
          REPO: ${{ github.repository }}

      # Create a release for this specific version
      - name: Create Release
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true # set this to false if you want to prevent updating existing releases
          name: ${{ steps.get_version.outputs.VERSION }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: './dist/module.json,./dist/module.zip'
          tag_name: ${{ steps.get_version.outputs.VERSION }}

      # Update the 'latest' release
      - name: Create Release
        id: create_latest_release
        uses: ncipollo/release-action@v1
        if: endsWith(github.ref, 'master')
        with:
          allowUpdates: true
          name: Latest
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: './dist/module.json, ./dist/module.zip'
          tag: latest
